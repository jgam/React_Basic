{"map":"{\"version\":3,\"sources\":[\"/Users/ascent/Desktop/practice/React_Basic/my-app/src/Movie.js\",\"/Users/ascent/Desktop/practice/React_Basic/my-app/src/App.js\",\"/Users/ascent/Desktop/practice/React_Basic/my-app/src/serviceWorker.js\",\"/Users/ascent/Desktop/practice/React_Basic/my-app/src/index.js\"],\"names\":[\"MoviePoster\",\"_ref2\",\"poster\",\"alt\",\"react_default\",\"a\",\"createElement\",\"src\",\"title\",\"className\",\"MovieGenre\",\"_ref3\",\"genre\",\"Movie\",\"_ref\",\"genres\",\"synopsis\",\"map\",\"index\",\"key\",\"lib_default\",\"text\",\"maxLine\",\"ellipsis\",\"trimRight\",\"basedOn\",\"App\",\"_makeMovies\",\"_callApi\",\"fetch\",\"then\",\"potato\",\"json\",\"data\",\"movies\",\"catch\",\"err\",\"console\",\"log\",\"_getMovies\",\"_callee\",\"regenerator_default\",\"wrap\",\"_context\",\"prev\",\"next\",\"_this\",\"sent\",\"setState\",\"stop\",\"state\",\"_renderMovies\",\"movie\",\"src_Movie\",\"medium_cover_image\",\"id\",\"_this2\",\"this\",\"setTimeout\",\"greeting\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"wUA8BA,SAASA,EAATC,GAAmC,IAAbC,EAAaD,EAAbC,OAAQC,EAAKF,EAALE,IAC1B,OACIC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,IAAKL,EAAQC,IAAKA,EAAKK,MAAOL,EAAKM,UAAU,kBAI1D,SAASC,EAATC,GAA4B,IAAPC,EAAOD,EAAPC,MACjB,OACIR,EAAAC,EAAAC,cAAA,OAAA,CAAMG,UAAU,gBAAgBG,GAoBzBC,IAAAA,EArDf,SAAAC,GAAiD,IAAjCN,EAAiCM,EAAjCN,MAAON,EAA0BY,EAA1BZ,OAAQa,EAAkBD,EAAlBC,OAAQC,EAAUF,EAAVE,SACnC,OACIZ,EAAAC,EAAAC,cAAA,MAAA,CAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,MAAA,CAAKG,UAAU,iBACXL,EAAAC,EAAAC,cAACN,EAAD,CAAaE,OAAQA,EAAQC,IAAKK,KAEtCJ,EAAAC,EAAAC,cAAA,MAAA,CAAKG,UAAU,iBACXL,EAAAC,EAAAC,cAAA,KAAA,KAAKE,GACLJ,EAAAC,EAAAC,cAAA,MAAA,CAAKG,UAAU,iBACVM,EAAOE,IAAI,SAACL,EAAOM,GAAR,OAAkBd,EAAAC,EAAAC,cAACI,EAAD,CAAYE,MAAOA,EAAOO,IAAKD,OAEjEd,EAAAC,EAAAC,cAAA,MAAA,CAAKG,UAAU,mBACfL,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CACIgB,KAAML,EACNM,QAAQ,IACRC,SAAS,MACTC,WAAS,EACTC,QAAQ,gBCuEbC,6MAzEbC,YAAc,eAIdC,SAAW,WACT,OAAOC,MAAM,iEACZC,KAAK,SAAAC,GAAM,OAAIA,EAAOC,SACtBF,KAAK,SAAAE,GAAI,OAAIA,EAAKC,KAAKC,SACvBC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAG5BG,gCAAa,SAAAC,IAAA,IAAAN,EAAA,OAAAO,EAAApC,EAAAqC,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EACUC,EAAKlB,WADf,KAAA,EACLM,EADKS,EAAAI,KAGXD,EAAKE,SAAS,CAACd,OAAAA,IAHJ,KAAA,EAAA,IAAA,MAAA,OAAAS,EAAAM,SAAAT,QAkCbU,MAAQ,KAGRC,cAAgB,WAYd,OAXeL,EAAKI,MAAMhB,OAAOjB,IAAI,SAACmC,GAEpC,OADAf,QAAQC,IAAIc,GACLhD,EAAAC,EAAAC,cAAC+C,EAAD,CACL7C,MAAO4C,EAAM5C,MACbN,OAAQkD,EAAME,mBACdvC,OAAQqC,EAAMrC,OACdC,SAAUoC,EAAMpC,SAChBG,IAAKiC,EAAMG,4FAhEG,IAAAC,EAAAC,KAClBC,WAAW,WACTF,EAAKR,SAAS,CACZW,SAAU,kBAEX,iDAqBHF,KAAKlB,8CA6CE,IACAL,EAAUuB,KAAKP,MAAfhB,OACP,OACE9B,EAAAC,EAAAC,cAAA,MAAA,CAAKG,UAAWyB,EAAS,MAAQ,gBAC9BuB,KAAKP,MAAMhB,OAASuB,KAAKN,gBAAkB,UAD9C,YAhFYS,EAAAA,WCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAO/D,EAAAC,EAAAC,cAAC8D,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3C,KAAK,SAAA4C,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport LinesEllipsis from 'react-lines-ellipsis'\\nimport './Movie.css';\\n\\nfunction Movie({title, poster, genres, synopsis}){\\n    return (\\n        <div className=\\\"Movie\\\">\\n            <div className=\\\"Movie__Column\\\">\\n                <MoviePoster poster={poster} alt={title} />\\n            </div>   \\n            <div className=\\\"Movie__Column\\\">\\n                <h1>{title}</h1>\\n                <div className=\\\"Movie__Genres\\\">\\n                    {genres.map((genre, index) => <MovieGenre genre={genre} key={index} />)}\\n                </div>\\n                <div className=\\\"Movie__Synopsis\\\">\\n                <LinesEllipsis\\n                    text={synopsis}\\n                    maxLine='3'\\n                    ellipsis='...'\\n                    trimRight\\n                    basedOn='letters'\\n                    />   \\n                </div>\\n            </div>\\n        </div>\\n    )\\n}\\n\\nfunction MoviePoster({poster, alt}){\\n    return (\\n        <img src={poster} alt={alt} title={alt} className=\\\"Movie__Poster\\\" />\\n    )\\n}\\n\\nfunction MovieGenre({genre}){\\n    return (\\n        <span className=\\\"Movie__Genre\\\">{genre}</span>\\n    )\\n}\\n\\nMovie.propTypes = {\\n    title: PropTypes.string.isRequired,\\n    poster: PropTypes.string.isRequired,\\n    genres: PropTypes.array.isRequired,\\n    synopsis: PropTypes.string.isRequired\\n}\\n\\nMoviePoster.propTypes = {\\n    poster: PropTypes.string.isRequired,\\n    alt: PropTypes.string.isRequired\\n}\\n\\nMovieGenre.propTypes ={\\n    genre: PropTypes.string.isRequired\\n}\\n\\nexport default Movie\",\"import React, { Component } from 'react';\\n//import logo from './logo.svg';\\nimport './App.css';\\nimport Movie from './Movie'\\n\\n\\nclass App extends Component {\\n\\n  //Render: componentWillMount() -> render() -> componentDidMount()\\n\\n  //Update: componentWillReceiveProps() -> shouldComponentUpdate()==true -> componentWillUpdate() -> render() -> componentDidUpdate()\\n\\n  componentWillMount(){\\n    setTimeout(() => {\\n      this.setState({\\n        greeting: 'Hello again!'//whenever the component mounts, we change greeting.\\n      })\\n    }, 5000)\\n  }\\n\\n  _makeMovies = () => {\\n\\n  }\\n\\n  _callApi = () => {\\n    return fetch(\\\"https://yts.am/api/v2/list_movies.json?sort_by=download_count\\\")\\n    .then(potato => potato.json())\\n    .then(json => json.data.movies)\\n    .catch(err => console.log(err))\\n  }\\n\\n  _getMovies = async () => {\\n    const movies = await this._callApi();//await?=>waiting for this._callApi() to be finished\\n    //this line doesn't get run until the await variable finishes\\n    this.setState({movies});\\n  }\\n\\n  componentDidMount(){//this is this.setState() which can be used when updating the state\\n    this._getMovies();\\n\\n    /*\\n    setTimeout(()=>{\\n      this.setState({\\n        movies:[\\n          {\\n            title: \\\"Us\\\",\\n            poster: \\\"https://upload.wikimedia.org/wikipedia/en/thumb/0/00/Us_%282019%29_theatrical_poster.png/220px-Us_%282019%29_theatrical_poster.png\\\"\\n          },\\n          {\\n            title: \\\"Toy Story 4\\\",\\n            poster: \\\"http://t2.gstatic.com/images?q=tbn:ANd9GcTqR5uODJzk3PqEuZvzqCV52r_ZfmYkoy_Tl-H0vbzpgceszT2h\\\"\\n          },\\n          {\\n            title: \\\"Winnie the Pooh\\\",\\n            poster: \\\"https://upload.wikimedia.org/wikipedia/en/thumb/1/10/Winniethepooh.png/220px-Winniethepooh.png\\\"\\n          }\\n        ]\\n      })\\n    },5000)\\n    */\\n  }\\n\\n  //state is an object and react component. Whenever the state changes, the component renders.\\n  //whenever state changes, render happens\\n\\n  state = {\\n  }\\n\\n  _renderMovies = () => {\\n    const movies = this.state.movies.map((movie) => {\\n      console.log(movie)\\n      return <Movie \\n        title={movie.title} \\n        poster={movie.medium_cover_image}\\n        genres={movie.genres}\\n        synopsis={movie.synopsis}\\n        key={movie.id}\\n         />\\n    })\\n    //bunch of arrays\\n    return movies\\n  }\\n\\n  render() {\\n    const {movies} = this.state;\\n    return (//jsx\\n      <div className={movies ? \\\"App\\\" : \\\"App--loading\\\"}>\\n        {this.state.movies ? this._renderMovies() : 'Loading'};\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{11:function(e,t,n){e.exports=n(24)},17:function(e,t,n){},20:function(e,t,n){},23:function(e,t,n){},24:function(e,t,n){\"use strict\";n.r(t);var a=n(0),o=n.n(a),r=n(3),i=n.n(r),s=(n(17),n(1)),c=n.n(s),l=n(4),u=n(5),m=n(6),v=n(9),p=n(7),d=n(10),f=(n(20),n(8)),h=n.n(f);n(23);function _(e){var t=e.poster,n=e.alt;return o.a.createElement(\"img\",{src:t,alt:n,title:n,className:\"Movie__Poster\"})}function g(e){var t=e.genre;return o.a.createElement(\"span\",{className:\"Movie__Genre\"},t)}var w=function(e){var t=e.title,n=e.poster,a=e.genres,r=e.synopsis;return o.a.createElement(\"div\",{className:\"Movie\"},o.a.createElement(\"div\",{className:\"Movie__Column\"},o.a.createElement(_,{poster:n,alt:t})),o.a.createElement(\"div\",{className:\"Movie__Column\"},o.a.createElement(\"h1\",null,t),o.a.createElement(\"div\",{className:\"Movie__Genres\"},a.map(function(e,t){return o.a.createElement(g,{genre:e,key:t})})),o.a.createElement(\"div\",{className:\"Movie__Synopsis\"},o.a.createElement(h.a,{text:r,maxLine:\"3\",ellipsis:\"...\",trimRight:!0,basedOn:\"letters\"}))))},y=function(e){function t(){var e,n;Object(u.a)(this,t);for(var a=arguments.length,r=new Array(a),i=0;i<a;i++)r[i]=arguments[i];return(n=Object(v.a)(this,(e=Object(p.a)(t)).call.apply(e,[this].concat(r))))._makeMovies=function(){},n._callApi=function(){return fetch(\"https://yts.am/api/v2/list_movies.json?sort_by=download_count\").then(function(e){return e.json()}).then(function(e){return e.data.movies}).catch(function(e){return console.log(e)})},n._getMovies=Object(l.a)(c.a.mark(function e(){var t;return c.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,n._callApi();case 2:t=e.sent,n.setState({movies:t});case 4:case\"end\":return e.stop()}},e)})),n.state={},n._renderMovies=function(){return n.state.movies.map(function(e){return console.log(e),o.a.createElement(w,{title:e.title,poster:e.medium_cover_image,genres:e.genres,synopsis:e.synopsis,key:e.id})})},n}return Object(d.a)(t,e),Object(m.a)(t,[{key:\"componentWillMount\",value:function(){var e=this;setTimeout(function(){e.setState({greeting:\"Hello again!\"})},5e3)}},{key:\"componentDidMount\",value:function(){this._getMovies()}},{key:\"render\",value:function(){var e=this.state.movies;return o.a.createElement(\"div\",{className:e?\"App\":\"App--loading\"},this.state.movies?this._renderMovies():\"Loading\",\";\")}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(o.a.createElement(y,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[11,1,2]]]);","extractedComments":[]}